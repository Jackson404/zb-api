{"remainingRequest":"C:\\Users\\lifei\\lifei\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lifei\\lifei\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\lifei\\lifei\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\lifei\\lifei\\src\\store\\index.js","mtime":1565683435522},{"path":"C:\\Users\\lifei\\lifei\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lifei\\lifei\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lifei\\lifei\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex); // 1.导入对象 2.vue.use 3.创建store对象 4.挂载\n\nvar store = new Vuex.Store({\n  state: {\n    // 存储用户信息\n    userinfo: {}\n  },\n  mutations: {\n    get_user: function get_user(state, data) {\n      state.userinfo = data;\n      console.log(data);\n    }\n  },\n  actions: {\n    getUser: function getUser(context, data) {\n      context.commit('get_user', data);\n    }\n  }\n});\nexport default store;",{"version":3,"sources":["C:\\Users\\lifei\\lifei\\src\\store\\index.js"],"names":["Vue","Vuex","use","store","Store","state","userinfo","mutations","get_user","data","console","log","actions","getUser","context","commit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAD,GAAG,CAACE,GAAJ,CAAQD,IAAR,E,CACA;;AAEA,IAAME,KAAK,GAAE,IAAIF,IAAI,CAACG,KAAT,CAAe;AAC3BC,EAAAA,KAAK,EAAC;AACL;AACAC,IAAAA,QAAQ,EAAC;AAFJ,GADqB;AAK3BC,EAAAA,SAAS,EAAC;AACTC,IAAAA,QADS,oBACAH,KADA,EACMI,IADN,EACW;AACnBJ,MAAAA,KAAK,CAACC,QAAN,GAAeG,IAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;AAJQ,GALiB;AAW3BG,EAAAA,OAAO,EAAC;AACPC,IAAAA,OADO,mBACCC,OADD,EACSL,IADT,EACc;AACpBK,MAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA0BN,IAA1B;AACA;AAHM;AAXmB,CAAf,CAAb;AAkBA,eAAeN,KAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nVue.use(Vuex)\r\n// 1.导入对象 2.vue.use 3.创建store对象 4.挂载\r\n\r\nconst store =new Vuex.Store({\r\n\tstate:{\r\n\t\t// 存储用户信息\r\n\t\tuserinfo:{}\r\n\t},\r\n\tmutations:{\r\n\t\tget_user(state,data){\r\n\t\t\tstate.userinfo=data;\r\n\t\t\tconsole.log(data);\r\n\t\t}\r\n\t},\r\n\tactions:{\r\n\t\tgetUser(context,data){\r\n\t\t\tcontext.commit('get_user',data)\r\n\t\t}\r\n\t}\r\n})\r\n\r\nexport default store;"]}]}